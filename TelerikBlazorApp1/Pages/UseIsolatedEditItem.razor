@page "/UseIsolatedEditItem"
@using TelerikBlazorApp1.Data

<TelerikGrid @ref="@Grid"
             Data="@Data"
             EditMode="@GridEditMode.Incell"
             Resizable="true"
             Width="100%"
             Height="100%"
             Reorderable="true"
             OnUpdate="UpdateHandler"
             Groupable="false"
             ShowColumnMenu="true"
             FilterMode="@GridFilterMode.FilterMenu"
             Sortable="true">
    <GridColumns>
        <GridColumn Field="Id">
            <Template>
                <span>@((context as IViewModel).Id)</span>
            </Template>
        </GridColumn>
        <GridColumn Field="FieldMapping.Child_ChildName" Editable="true" Title="Child Name">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Child.ChildName
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Child.ChildName"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field="Child.ChildAmount" Editable="true" Title="Child Amount">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Child.ChildAmount
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikNumericTextBox @bind-Value="row.Child.ChildAmount"></TelerikNumericTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field="FieldMapping.Accounts_0_Account" Editable="true" Title="Accounts[0].Account">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Accounts[0].Account
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Accounts[0].Account"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field="FieldMapping.Accounts_1_Account" Editable="true" Title="Accounts[1].Account">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Accounts[1].Account
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Accounts[1].Account"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field=@nameof(IViewModel.Name) Editable="true">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Name
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Name"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field="Name2" Editable="true" Title="Name2">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Name2
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Name2"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
            <FooterTemplate>
                <span>@(string.Join('|', Data.Select(d => d.Name2)))</span>
            </FooterTemplate>
        </GridColumn>
        <GridColumn Field=@nameof(ViewModel.Age) Editable="true">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Age
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikNumericTextBox @bind-Value="row.Age"></TelerikNumericTextBox>
                    </div>
                }
            </EditorTemplate>
            <FooterTemplate>
                Total: <span>@(Data.Select(d => d.Age).Sum().ToString())</span>
            </FooterTemplate>
        </GridColumn>
        <GridColumn Field=@nameof(ViewModel.Name3) Editable="true">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.Name3
                    </div>
                }
            </Template>
            <EditorTemplate>
                @{
                    var row = context as IViewModel;
                    <div>
                        <TelerikTextBox @bind-Value="row.Name3"></TelerikTextBox>
                    </div>
                }
            </EditorTemplate>
        </GridColumn>
        <GridColumn Field=@nameof(ViewModel.CalcField) Editable="false" Title="Calc from prop of same row">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.CalcField
                    </div>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(ViewModel.EventDrivenField) Editable="false" Title="Event Driven from other row">
            <Template>
                @{
                    var row = context as IViewModel;
                    <div>
                        @row.EventDrivenField
                    </div>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</TelerikGrid>


@code {
    private const int RowHeight = 40;
    private const string Height = "700px";
    private const int PageSize = 20;

    private List<IViewModel> VisibleData;

    private List<IViewModel> Data { get; set; } = new List<IViewModel>();
    private MyContainer myContainer;

    private TelerikGrid<IViewModel> Grid { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Data = ViewModelService.GetViewModel3Data();

        myContainer = new MyContainer(Data);

        await base.OnInitializedAsync();
    }

    // on update to update to backend and refresh data 
    async Task UpdateHandler(GridCommandEventArgs args)
    {
        IViewModel item = (IViewModel)args.Item;

        // perform actual data source operations here through your service
      //  await MyService.Update(item);

        // update the local view-model data with the service data
      //  await GetGridData();

        Console.WriteLine("Update event is fired.");
    }
}

